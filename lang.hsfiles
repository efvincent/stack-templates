{-# START_FILE stack.yaml #-}
packages:
- .

resolver: lts-17.14

extra-deps:

{-# START_FILE package.yaml #-}
name: {{name}}
version: 0.1.0.0

dependencies:
- base >= 4.7 && < 5
- text
- array

library:
  source-dirs:
  - language/gen-{{lang}}

executables:
  {{name}}.exe:
    main: Main.hs
    source-dirs:
    - src
    ghc-options:
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    dependencies:
    - {{name}}

{-# START_FILE language/{{lang}}.cf #-}
EAdd. Exp  ::= Exp  "+" Exp1 ;
ESub. Exp  ::= Exp  "-" Exp1 ;
EMul. Exp1 ::= Exp1 "*" Exp2 ;
EDiv. Exp1 ::= Exp1 "/" Exp2 ;
EInt. Exp2 ::= Integer;

coercions Exp 2;

{-# START_FILE build{{lang}}.sh #-}
#!/usr/bin/env bash
if ! command -v bnfc &> /dev/null
then
    echo -e "\nBNFC is not installed. See the readme at http://github.com/efvincent/stack_templates\n"
    exit
fi

cd ./language/
echo -e "\n********\nRunning BNF Grammar Generator\n********\n"
bnfc -m --haskell -d -o gen-{{lang}} {{lang}}.cf
bnfc -m --pygments -o gen-{{lang}} {{lang}}.cf
echo -e "\n********\nRunning make over generated Grammar\n********\n"
cd ./gen-{{lang}}
make
echo -e "\n********\nSplicing test module into Main.hs\n********"
cd ./{{lang}}
sed -i hs 's/module Main where/module {{lang}}.Test (test) where/' Test.hs
sed -i hs 's/main ::/test ::/' Test.hs
sed -i hs 's/main = do/test = do/' Test.hs
cd ../..
echo -e "Done...\n********\n"

{-# START_FILE README.org #-}
* Programming Language Project {{name}}
  This project generated by a template with the purpose of working with a parser / lexer for a grammer (presumably for a programming language).

* Instructions
** Modifying the grammar
** Generating the parser & Lexer code
Run the parser lexer generator =bnfc= with the command:

#+begin_src bash
$ # from the project home directory
$ bnfc -m --haskell -d -o gen-{{lang}} {{lang}}.cf
$ cd gen-{{lang}}
$ make
#+end_src

** Preparing to Build
  The above command will create the source files for the parser lexer. At this time, we're using the makefile that comes from =bnfc=. Eventually I'll templatize a better make file, but for now we're able to use this one for convenience. 

*** The =Test.hs= test file
  The parser generator has created a test file that while convenient, is not going to work for compiling the language files as a library, since it has a main module and is intentended to run stand alone. Instead you can use the test file to replace the Main.hs from the template. Eventually I'll clean this up.

{-# START_FILE src/Main.hs #-}
module Main where

import {{lang}}.Test

main :: IO ()
main = test

{-# START_FILE LICENSE #-}
Copyright {{author-name}}{{^author-name}}Author name here{{/author-name}} (c) {{year}}{{^year}}2019{{/year}}

All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.

3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.